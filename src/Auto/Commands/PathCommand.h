#ifndef SRC_AUTO_COMMANDS_PATHCOMMAND_H_
#define SRC_AUTO_COMMANDS_PATHCOMMAND_H_

#include <Auto/MotionProfiling/LeftLift_MotionProfile.h>
#include <Auto/MotionProfiling/MiddleLift_MotionProfile.h>
#include <Auto/MotionProfiling/MotionProfileExecutor.h>
#include <Auto/MotionProfiling/RightLift_MotionProfile.h>
#include "WPILib.h"
#include "Auto/Commands/AutoCommand.h"
#include "Auto/MotionProfiling/MotionProfile.h"
#include "Auto/MotionProfiling/HighGoalAfterLeftLift_MotionProfile.h"
#include "Auto/MotionProfiling/HighGoalAfterRightLift_MotionProfile.h"
#include "RobotModel.h"

class PathCommand : public AutoCommand {
public:
	enum Path { kLeftLift, kMiddleLift, kRightLift, kHighGoalAfterLeftLift, kHighGoalAfterRightLift };

	/**
	 * Constructor that generates a PathCommand
	 * @param robot a RobotModel
	 * @param Path a path of waypoints generated by motion profile
	 */
	PathCommand(RobotModel *robot, Path path);
	~PathCommand();

	void Init();
	void Update(double currTimeSec, double deltaTimeSec);
	bool IsDone();

	void ClearMotionProfile();

private:
	RobotModel *robot_;
	Path path_;
	int lengthOfLeftMotionProfile_, lengthOfRightMotionProfile_;
	double leftMotionProfile_[][3], rightMotionProfile_[][3];
	double leftPFac_, leftIFac_, leftDFac_, leftFFac_;
	double rightPFac_, rightIFac_, rightDFac_, rightFFac_;
	MotionProfileExecutor *leftMotionProfileExecutor_, *rightMotionProfileExecutor_;
	bool isDone_;
};

#endif /* SRC_AUTO_COMMANDS_PATHCOMMAND_H_ */
